"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),Alphabets={LETTERS:"ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),NUMBERS:"1234567890".split("")},ComboLock=function(){function t(e,n){_classCallCheck(this,t),this.discs=[],e&&e.length&&this.setDiscs(e),n&&n.length&&this.setCorrectNotchIndexes(n)}return _createClass(t,[{key:"setDiscs",value:function(){var t=arguments.length<=0||void 0===arguments[0]?[]:arguments[0];this.discs=t}},{key:"getDiscs",value:function(){return this.discs}},{key:"getDiscIndex",value:function(t){return this.discs.indexOf(t)}},{key:"getDisc",value:function(t){return this.discs[t]}},{key:"addDisc",value:function(t){this.discs.push(t)}},{key:"removeDisc",value:function(t){var e="number"!=typeof t?this.getDiscIndex(t):t;this.discs.splice(e,1)}},{key:"forEachDisc",value:function(t){for(var e=0;e<this.discs.length;e++)t(this.getDisc(e),e)}},{key:"setCurrentNotchIndexes",value:function(t){this.forEachDisc(function(e,n){e.setCurrentNotchIndex(t[n])})}},{key:"getCurrentNotchIndexes",value:function(){var t=[];return this.forEachDisc(function(e,n){t[n]=e.getCurrentNotchIndex()}),t}},{key:"setCurrentNotches",value:function(t){this.forEachDisc(function(e,n){e.setCurrentNotch(t[n])})}},{key:"getCurrentNotches",value:function(){var t=[];return this.forEachDisc(function(e,n){t[n]=e.getCurrentNotch()}),t}},{key:"setCorrectNotchIndexes",value:function(t){this.forEachDisc(function(e,n){e.setCorrectNotchIndex(t[n])})}},{key:"getCorrectNotchIndexes",value:function(){var t=[];return this.forEachDisc(function(e,n){t[n]=e.getCorrectNotchIndex()}),t}},{key:"setCorrectNotches",value:function(t){this.forEachDisc(function(e,n){e.setCorrectNotch(t[n])})}},{key:"getCorrectNotches",value:function(){var t=[];return this.forEachDisc(function(e,n){t[n]=e.getCorrectNotch()}),t}},{key:"isCorrect",value:function(){var t=!!this.getDiscs().length;return this.forEachDisc(function(e){t=t&&e.isCorrect()}),t}},{key:"generate",value:function(){var t=arguments.length<=0||void 0===arguments[0]?4:arguments[0],e=arguments.length<=1||void 0===arguments[1]?10:arguments[1],n=arguments.length<=2||void 0===arguments[2]?Alphabets.LETTERS:arguments[2],r=arguments.length<=3||void 0===arguments[3]?[]:arguments[3];this.setDiscs();for(var s=0;t>s;s++){var c=new ComboLockDisc;c.generate(e,n,r[s]),n===Alphabets.NUMBERS&&e==n.length?c.sortNotches():c.shuffleNotches(),this.addDisc(c)}return this.discs}},{key:"generateCorrectNotchIndexes",value:function(){this.forEachDisc(function(t){t.generateCorrectNotchIndex()})}}]),t}(),ComboLockDisc=function(){function t(e,n){_classCallCheck(this,t),this.notches=[],e&&e.length&&this.setNotches(e),void 0!==n&&this.setCorrectNotchIndex(n)}return _createClass(t,[{key:"setNotches",value:function(){var t=arguments.length<=0||void 0===arguments[0]?[]:arguments[0];this.notches=t}},{key:"getNotches",value:function(){return this.notches}},{key:"getNotchIndex",value:function(t){return this.notches.indexOf(t)}},{key:"getNotch",value:function(t){return this.notches[t]}},{key:"addNotch",value:function(t){this.notches.push(t)}},{key:"removeNotch",value:function(t){var e="number"!=typeof t?this.getNotchIndex(t):t;this.notches.splice(e,1)}},{key:"setCurrentNotchIndex",value:function(t){this.currentNotchIndex=parseInt(t)}},{key:"getCurrentNotchIndex",value:function(){return this.currentNotchIndex}},{key:"setCurrentNotch",value:function(t){this.setCurrentNotchIndex(this.getNotchIndex(t))}},{key:"getCurrentNotch",value:function(){return this.getNotch(this.currentNotchIndex)}},{key:"setCorrectNotchIndex",value:function(t){this.correctNotchIndex=parseInt(t)}},{key:"getCorrectNotchIndex",value:function(){return this.correctNotchIndex}},{key:"setCorrectNotch",value:function(t){this.setCorrectNotchIndex(this.getNotchIndex(t))}},{key:"getCorrectNotch",value:function(){return this.getNotch(this.getCorrectNotchIndex())}},{key:"isCorrect",value:function(){return void 0!==this.getCurrentNotchIndex()&&void 0!==this.getCorrectNotchIndex()&&this.getCurrentNotchIndex()===this.getCorrectNotchIndex()}},{key:"generate",value:function(){var t=arguments.length<=0||void 0===arguments[0]?10:arguments[0],e=arguments.length<=1||void 0===arguments[1]?Alphabets.LETTERS:arguments[1],n=arguments.length<=2||void 0===arguments[2]?[]:arguments[2];e=[].slice.call(e),this.setNotches(),this.setCurrentNotchIndex(),this.setCorrectNotchIndex();for(var r=0;t>r;r++){var s=Math.round(Math.random()*(e.length-1));e.indexOf(n[r])>=0&&(s=e.indexOf(n[r]));var c=e.splice(s,1)[0];this.addNotch(c)}return this.generateCorrectNotchIndex(),this.notches}},{key:"generateCorrectNotchIndex",value:function(){this.setCorrectNotchIndex(Math.round(Math.random()*(this.notches.length-1)))}},{key:"shuffleNotches",value:function(){for(var t,e,n=this.notches.length;n;t=Math.floor(Math.random()*n),e=this.notches[--n],this.notches[n]=this.notches[t],this.notches[t]=e);return this.notches}},{key:"sortNotches",value:function(t){return this.notches.sort(t)}}]),t}();angular.module("lock-generator",[]).controller("AppCtrl",["$rootScope",function(t){t.alphabetTypes=[{$id:"LETTERS",name:"Letters"},{$id:"NUMBERS",name:"Numbers"}],t.alphabetType="LETTERS",t.numDiscs=4,t.numNotches=10,t.mustIncludes=[],t.lock=new ComboLock,t.generate=function(){t.lock.generate(t.numDiscs,t.numNotches,Alphabets[t.alphabetType],t.mustIncludes),angular.forEach(t.mustIncludes,function(e,n){""!==e&&t.lock.getDisc(n).setCorrectNotch(e)}),t.solution=t.lock.getCorrectNotches()},t.generate(),t.numTimes=function(t){return new Array(t)},t["int"]=function(t){return parseInt(t)},t.guesses=[],t.solve=function(){angular.forEach(t.lock.getCorrectNotchIndexes(),function(e,n){t.lock.getDiscs()[n].setCurrentNotchIndex(e),t.guesses[n]=""+e})}}]);